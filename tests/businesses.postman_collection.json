{
	"info": {
		"_postman_id": "411ede61-fc64-429f-891a-81d9584be339",
		"name": "businesses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34993799"
	},
	"item": [
		{
			"name": "create two businesses",
			"item": [
				{
					"name": "create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all required properties\", function () {",
									"    pm.response.to.have.jsonBody(\"username\");",
									"    pm.response.to.have.jsonBody(\"email\");",
									"    pm.response.to.have.jsonBody(\"admin\");",
									"});",
									"",
									"pm.collectionVariables.unset('firstCreatedUserId');",
									"pm.collectionVariables.set('firstCreatedUserId', response.username)",
									"",
									"pm.collectionVariables.unset('createdUserId');",
									"pm.collectionVariables.set('createdUserId', response.username)",
									"",
									"pm.collectionVariables.unset('firstCreatedUserPassword');",
									"pm.collectionVariables.set('firstCreatedUserPassword', JSON.parse(pm.request.body.raw).password)",
									"",
									"pm.collectionVariables.unset('createdUserPassword');",
									"pm.collectionVariables.set('createdUserPassword', JSON.parse(pm.request.body.raw).password)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"email\": \"{{$randomEmail}}\"\n}"
						},
						"url": {
							"raw": "localhost:6969/users",
							"host": [
								"localhost"
							],
							"port": "6969",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as created user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.collectionVariables.unset('userAuthToken');",
									"pm.collectionVariables.set('userAuthToken', response.token);",
									"",
									"pm.collectionVariables.unset('firstUserAuthToken');",
									"pm.collectionVariables.set('firstUserAuthToken', response.token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{createdUserId}}\",\n    \"password\": \"{{createdUserPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "make a new business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json;",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all required properties\", function () {",
									"    pm.response.to.have.jsonBody(\"_id\");",
									"    pm.response.to.have.jsonBody(\"links\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"{{$randomCompanyName}}\",\n        \"address\": \"{{$randomStreetAddress}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"state\": \"TS\",\n        \"zip\": \"69420\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"category\": \"{{$randomDepartment}}\",\n        \"subcategory\": \"{{$randomDepartment}}\",\n        \"website\": \"http://testbusiness.com\",\n        \"email\": \"test@testbusiness.com\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/businesses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "make a deletable business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset('createdBusId');",
									"pm.collectionVariables.set('createdBusId', pm.response.json()._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"{{$randomCompanyName}}\",\n        \"address\": \"{{$randomStreetAddress}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"state\": \"TS\",\n        \"zip\": \"69420\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"category\": \"{{$randomDepartment}}\",\n        \"subcategory\": \"{{$randomDepartment}}\",\n        \"website\": \"http://testbusiness.com\",\n        \"email\": \"test@testbusiness.com\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/businesses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "update a deletable business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has all required properties\", function () {",
									"    pm.response.to.have.jsonBody(\"_id\");",
									"    pm.response.to.have.jsonBody(\"links\");",
									"});",
									"",
									"",
									"pm.collectionVariables.unset('createdBusId');",
									"pm.collectionVariables.set('createdBusId', pm.response.json()._id)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"{{$randomCompanyName}}\",\n        \"address\": \"{{$randomStreetAddress}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"state\": \"ZX\",\n        \"zip\": \"69420\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"category\": \"{{$randomDepartment}}\",\n        \"subcategory\": \"{{$randomDepartment}}\",\n        \"website\": \"http://testbusiness.com\",\n        \"email\": \"test@testbusiness.com\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/businesses/{{createdBusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses",
								"{{createdBusId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get info about a created business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.unset('businessPreState');",
									"pm.collectionVariables.set('businessPreState', response.state)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/businesses/{{createdBusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses",
								"{{createdBusId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get a user's businesses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json;",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.unset('businessPreState');",
									"pm.collectionVariables.set('businessPreState', response.state)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/{{createdUserId}}/businesses/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{createdUserId}}",
								"businesses",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "add a new business and change user to delete",
			"item": [
				{
					"name": "create another new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has all required properties\", function () {",
									"    pm.response.to.have.jsonBody(\"username\");",
									"    pm.response.to.have.jsonBody(\"email\");",
									"    pm.response.to.have.jsonBody(\"admin\");",
									"});",
									"",
									"pm.collectionVariables.unset('createdUserId');",
									"pm.collectionVariables.set('createdUserId', response.username)",
									"",
									"pm.collectionVariables.unset('createdUserPassword');",
									"pm.collectionVariables.set('createdUserPassword', JSON.parse(pm.request.body.raw).password)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"email\": \"{{$randomEmail}}\"\n}"
						},
						"url": {
							"raw": "localhost:6969/users",
							"host": [
								"localhost"
							],
							"port": "6969",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as another created user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.unset('userAuthToken');",
									"pm.collectionVariables.set('userAuthToken', pm.response.json().token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{createdUserId}}\",\n    \"password\": \"{{createdUserPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "fail to delete a second business another user doesn't own",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json;",
									"",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{userAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/businesses/{{createdBusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"businesses",
								"{{createdBusId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "delete a second business with first user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json;",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{firstUserAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/businesses/{{createdBusId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"businesses",
						"{{createdBusId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "fail to make a new business",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json;",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has all required properties\", function () {",
							"    pm.response.to.have.jsonBody(\"error\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"name\": \"{{$randomCompanyName}}\",\n        \"address\": \"{{$randomStreetAddress}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"zip\": \"69420\",\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"category\": \"{{$randomDepartment}}\",\n        \"subcategory\": \"{{$randomDepartment}}\",\n        \"website\": \"http://testbusiness.com\",\n        \"email\": \"test@testbusiness.com\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/businesses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"businesses"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "createdUserId",
			"value": ""
		},
		{
			"key": "createdUserPassword",
			"value": ""
		},
		{
			"key": "userAuthToken",
			"value": ""
		},
		{
			"key": "createdBusId",
			"value": "",
			"type": "string"
		},
		{
			"key": "businessPreState",
			"value": ""
		}
	]
}