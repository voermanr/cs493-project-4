{
	"info": {
		"_postman_id": "abde71ed-bf8d-4037-86b4-bccbf888e3da",
		"name": "users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34993799"
	},
	"item": [
		{
			"name": "create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has all required properties\", function () {",
							"    pm.response.to.have.jsonBody(\"username\");",
							"    pm.response.to.have.jsonBody(\"email\");",
							"    pm.response.to.have.jsonBody(\"admin\");",
							"});",
							"",
							"pm.collectionVariables.unset('createdUserId');",
							"pm.collectionVariables.set('createdUserId', response.username)",
							"",
							"pm.collectionVariables.unset('createdUserPassword');",
							"pm.collectionVariables.set('createdUserPassword', JSON.parse(pm.request.body.raw).password)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{$randomUserName}}\",\n    \"password\": \"{{$randomPassword}}\",\n    \"email\": \"{{$randomEmail}}\"\n}"
				},
				"url": {
					"raw": "localhost:6969/users",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login as created user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.unset('userAuthToken');",
							"pm.collectionVariables.set('userAuthToken', pm.response.json().token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{createdUserId}}\",\n    \"password\": \"{{createdUserPassword}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "fail to create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json;",
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response has all required properties\", function () {",
							"    pm.response.to.have.jsonBody(\"error\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\": \"${{$randomPassword}}\",\n    \"email\": \"${{$randomEmail}}\"\n}"
				},
				"url": {
					"raw": "localhost:6969/users",
					"host": [
						"localhost"
					],
					"port": "6969",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get a new user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{userAuthToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users/{{createdUserId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{createdUserId}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "createdUserId",
			"value": ""
		},
		{
			"key": "createdUserPassword",
			"value": ""
		},
		{
			"key": "userAuthToken",
			"value": ""
		}
	]
}